#!/usr/bin/env node

import app from '../app.js';
import http from 'http';
import debug from 'debug'; 

process.env.DEBUG = 'app:*';
const debugAppServer = debug('app-server');
const port = normalizePort(process.env.PORT || '3000');
const server = http.createServer(app);

server.listen(port, () => {
  console.log(`Servidor corriendo en el puerto ${port}`);
});

server.on('error', onError);
server.on('listening', onListening);


function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) {
    return val;
  }
  if (port >= 0) {
    return port;
  }
  return false;
}


function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;

  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requiere permisos elevados`);
      process.exit(1);
    case 'EADDRINUSE':
      console.error(`${bind} ya est√° en uso`);
      process.exit(1);
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`;
  debugAppServer(`Escuchando en ${bind}`);
}

